<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ISA on K Ring Technologies Ltd</title>
    <link>https://kring.co.uk/tags/isa/</link>
    <description>Recent content in ISA on K Ring Technologies Ltd</description>
    <generator>Hugo</generator>
    <language>en-GB</language>
    <lastBuildDate>Tue, 12 Nov 2024 19:50:19 +0000</lastBuildDate>
    <atom:link href="https://kring.co.uk/tags/isa/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A Simple RISC</title>
      <link>https://kring.co.uk/aladdin/a-simple-risc/</link>
      <pubDate>Tue, 12 Nov 2024 19:50:19 +0000</pubDate>
      <guid>https://kring.co.uk/aladdin/a-simple-risc/</guid>
      <description>&lt;p&gt;Some ideas for a simple RISC processor although unlikely to ever be made, do&#xA;have possible application. To make it easy a 16 bit wide instruction and 16&#xA;general registers 32 bit wide make most sense.&lt;/p&gt;&#xA;&lt;p&gt;Hiding the link register &lt;code&gt;ln&lt;/code&gt; has good security implications so it is always&#xA;implicit. Also the &lt;code&gt;pc&lt;/code&gt; can be implicit too. So here goes. It&amp;rsquo;s not as though&#xA;the return stack isn&amp;rsquo;t heavily cached, and doesn&amp;rsquo;t need writeback of anything&#xA;below the stack pointer line.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
